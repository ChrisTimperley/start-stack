diff --git a/libraries/GCS_MAVLink/GCS_Param.cpp b/libraries/GCS_MAVLink/GCS_Param.cpp
index 0ec8578..00111f3 100644
--- a/libraries/GCS_MAVLink/GCS_Param.cpp
+++ b/libraries/GCS_MAVLink/GCS_Param.cpp
@@ -241,18 +241,33 @@ void GCS_MAVLINK::handle_param_set(mavlink_message_t *msg)
     mavlink_param_set_t packet;
     mavlink_msg_param_set_decode(msg, &packet);
     enum ap_var_type var_type;
+    char *ptr = (char *) malloc(16); // AIS
+    int abrt = 0; // AIS
 
     // set parameter
     AP_Param *vp;
     char key[AP_MAX_NAME_SIZE+1];
     strncpy(key, (char *)packet.param_id, AP_MAX_NAME_SIZE);
     key[AP_MAX_NAME_SIZE] = 0;
+    memcpy(ptr, packet.param_id, sizeof(ptr)); // AIS
 
     // find existing param so we can get the old value
     vp = AP_Param::find(key, &var_type);
     if (vp == nullptr) {
-        return;
+        abrt = 1; // AIS
+        hal.console->printf("AIS Debug: ptr freed\n"); // AIS
+        free(ptr); // AIS
+        // return;
     }
+
+    float *ftr = (float *) malloc(4); // AIS
+    ftr = &packet.param_value; // AIS
+
+    if (abrt == 1) { // AIS
+        hal.console->printf("AIS UAF: Param name not listed: %s, %f\n", *ptr, *ftr); // AIS
+        return; // AIS
+    } // AIS
+
     float old_value = vp->cast_to_float(var_type);
 
     // set the value
